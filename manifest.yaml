apiVersion: apps/v1
kind: Deployment
metadata:
  name: whale-alert-es
  namespace: prod
  labels:
    app: whale-alert-es
spec:
  replicas: 1
  revisionHistoryLimit: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app: whale-alert-es
  template:
    metadata:
      labels:
        app: whale-alert-es
    spec:
      volumes:
        - name: whale-alert-es-data
          persistentVolumeClaim:
            claimName: whale-alert-es-pvc
      containers:
        - name: whale-alert-es
          image: registry.home:6000/whale-alert-es:latest
          imagePullPolicy: Always
          env:
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  name: whale-alert-es-secret
                  key: token
          volumeMounts:
            - name: whale-alert-es-data
              mountPath: /data
      restartPolicy: Always
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 5
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: whale-alert-es-pvc
  namespace: prod
  labels:
    app: whale-alert-es
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1M
  #  selector:
  #    matchLabels:
  #      pv: local
  storageClassName: microk8s-hostpath
