name: Release

on:
  push:
    branches:
      - 'master'
      - 'main'
  #   tags:
  #     - 'v*'
  # pull_request:
  #   branches:
  #     - 'master'
  #     - 'main'

env:
  NODE_ENV: production

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: steps.changelog.outputs.skipped == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          # draft: false
          # prerelease: false
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            name=${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }},enable=true
          tags: |
            # type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ steps.changelog.outputs.tag }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.changelog.outputs.tag }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: ${{ steps.changelog.outputs.tag }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
     
      - name: Build and push
        if: ${{ steps.changelog.outputs.tag }}
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.changelog.outputs.tag }}
          # tags: ${{ steps.meta.outputs.tags }}

      # - name: Dump github context
      #   run: |
      #     echo "$GITHUB_CONTEXT"
      #   shell: bash
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
